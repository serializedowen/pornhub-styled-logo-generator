{"version":3,"sources":["utils/download.ts","hooks/useConfig.ts","hooks/useDebounce.ts","renderers/CanvasRenderer.tsx","utils/drawRoundedRect.ts"],"names":["download","content","filename","url","eleLink","document","createElement","Blob","URL","createObjectURL","style","display","href","body","appendChild","click","removeChild","revokeObjectURL","dataURItoBlob","dataURI","byteString","split","indexOf","atob","unescape","mimeString","ia","Uint8Array","length","i","charCodeAt","type","defaultConfig","width","height","leftWidth","rightWidth","splitIndex","useState","state","setstate","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","newConfig","Object","assign","Math","max","substring","gblen","floor","currentAnimation","CanvasRenderer","setexportMethod","canvasRef","useRef","useConfig","exportFunction","useCallback","current","toDataURL","React","useLayoutEffect","requestAnimationFrame","ctx","getContext","fillRect","fillStyle","font","textBaseline","textAlign","fillText","substr","x","y","radius","fill","stroke","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","drawRoundedRect","save","cancelAnimationFrame","ref"],"mappings":"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","file":"static/js/3.dca37a2e.chunk.js","sourcesContent":["export default function download(content: string | Blob, filename: string) {\n  const eleLink = document.createElement(\"a\");\n\n  let url: string;\n  if (content instanceof Blob) url = URL.createObjectURL(content);\n  else url = URL.createObjectURL(new Blob([content]));\n  eleLink.download = filename;\n  eleLink.style.display = \"none\";\n\n  eleLink.href = url;\n\n  document.body.appendChild(eleLink);\n  eleLink.click();\n  document.body.removeChild(eleLink);\n  URL.revokeObjectURL(url);\n}\n\nexport function dataURItoBlob(dataURI: string) {\n  // convert base64/URLEncoded data component to raw binary data held in a string\n  var byteString;\n  if (dataURI.split(\",\")[0].indexOf(\"base64\") >= 0)\n    byteString = atob(dataURI.split(\",\")[1]);\n  else byteString = unescape(dataURI.split(\",\")[1]);\n\n  // separate out the mime component\n  var mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n\n  // write the bytes of the string to a typed array\n  var ia = new Uint8Array(byteString.length);\n  for (var i = 0; i < byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n  }\n\n  return new Blob([ia], { type: mimeString });\n}\n","import { useState, useEffect } from \"react\";\nimport useDebounce from \"./useDebounce\";\n\nconst defaultConfig = {\n  width: 500,\n  height: 350,\n  leftWidth: 150,\n  rightWidth: 150,\n};\nexport default ({\n  content,\n  splitIndex,\n}: Omit<IRendererProps, \"setexportMethod\">) => {\n  const [state, setstate] = useState(defaultConfig);\n\n  // const debounced = useDebounce({ content, splitIndex }, 100);\n\n  useDebounce(content, 100);\n  useEffect(() => {\n    const newConfig = Object.assign({}, defaultConfig);\n\n    newConfig.width =\n      Math.max(\n        content.substring(0, splitIndex).gblen,\n        content.substring(splitIndex).gblen\n      ) *\n        45 *\n        2 +\n      40;\n    newConfig.height = Math.floor(newConfig.width * 0.6);\n\n    newConfig.leftWidth = content.substring(0, splitIndex).gblen * 45;\n    newConfig.rightWidth = content.substring(splitIndex).gblen * 45;\n\n    setstate(newConfig);\n    return () => {};\n  }, [content, splitIndex]);\n\n  return state;\n};\n","import { useState, useEffect } from \"react\";\n\nexport default function useDebounce<T>(value: T, delay: number): T {\n  // State and setters for debounced value\n\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n","import React, { useEffect, useCallback, useRef } from \"react\";\nimport useConfig from \"src/hooks/useConfig\";\nimport drawRoundedRect from \"src/utils/drawRoundedRect\";\nimport download from \"src/utils/download\";\nimport { Button } from \"@material-ui/core\";\nimport { dataURItoBlob } from \"src/utils/download\";\n\nlet currentAnimation: number;\n\nexport default function CanvasRenderer({\n  content,\n  splitIndex,\n  setexportMethod,\n}: IRendererProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { width, height, leftWidth, rightWidth } = useConfig({\n    content,\n    splitIndex,\n  });\n\n  const exportFunction = useCallback(() => {\n    if (canvasRef.current) {\n      download(dataURItoBlob(canvasRef.current.toDataURL()), \"logo.png\");\n    }\n  }, []);\n  useEffect(() => {\n    setexportMethod(() => exportFunction);\n\n    return () => {\n      setexportMethod(() => () => {});\n    };\n  }, [exportFunction, setexportMethod]);\n\n  React.useLayoutEffect(() => {\n    const update = () => {\n      if (canvasRef.current) {\n        const ctx = canvasRef.current.getContext(\"2d\")!;\n        canvasRef.current.width = width;\n        canvasRef.current.height = height;\n        ctx.fillRect(0, 0, width, height);\n\n        ctx.fillStyle = \"rgba(255,255,255)\";\n        ctx.font = \"80px Arial\";\n        // fillStyle: \"rgba(184, 184, 184, 0.8)\",\n\n        ctx.textBaseline = \"middle\";\n        ctx.textAlign = \"end\";\n        ctx.fillText(content.substr(0, splitIndex), width / 2, height / 2);\n\n        ctx.fillStyle = \"rgb(253,112,11)\";\n        drawRoundedRect(\n          ctx,\n          width / 2,\n          height * 0.2,\n          rightWidth,\n          height * 0.6,\n          10\n        );\n\n        ctx.textAlign = \"start\";\n\n        ctx.fillStyle = \"rgb(0,0,0)\";\n        ctx.fillText(content.substr(splitIndex), width / 2, height / 2);\n        ctx.save();\n      }\n    };\n\n    currentAnimation = requestAnimationFrame(update);\n\n    return () => {\n      cancelAnimationFrame(currentAnimation);\n    };\n  }, [width, height, leftWidth, rightWidth, content, splitIndex]);\n\n  return (\n    <div>\n      <canvas ref={canvasRef}></canvas>\n    </div>\n  );\n}\n","export default function roundRect(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  radius = 5,\n  fill = true,\n  stroke = true\n) {\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.lineTo(x + width - radius, y);\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n  ctx.lineTo(x + width, y + height - radius);\n  ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n  ctx.lineTo(x + radius, y + height);\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n  ctx.lineTo(x, y + radius);\n  ctx.quadraticCurveTo(x, y, x + radius, y);\n  ctx.closePath();\n  if (stroke) {\n    ctx.stroke();\n  }\n  if (fill) {\n    ctx.fill();\n  }\n}\n"],"sourceRoot":""}