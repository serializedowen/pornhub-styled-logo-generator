{"version":3,"sources":["utils/download.ts","hooks/useConfig.ts","hooks/useDebounce.ts","renderers/SvgRenderer.tsx"],"names":["download","content","filename","url","eleLink","document","createElement","Blob","URL","createObjectURL","style","display","href","body","appendChild","click","removeChild","revokeObjectURL","dataURItoBlob","dataURI","byteString","split","indexOf","atob","unescape","mimeString","ia","Uint8Array","length","i","charCodeAt","type","defaultConfig","width","height","leftWidth","rightWidth","splitIndex","useState","state","setstate","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","newConfig","Object","assign","Math","max","substring","gblen","floor","useStyles","makeStyles","root","position","exportPanel","visibility","transition","top","left","opacity","transform","renderer","SvgRenderer","setexportMethod","useConfig","svgRef","useRef","classes","exportFunction","useCallback","current","outerHTML","className","ref","fill","x","y","rx","ry","fontSize","fontFamily","alignmentBaseline","textAnchor"],"mappings":"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","file":"static/js/4.04de468d.chunk.js","sourcesContent":["export default function download(content: string | Blob, filename: string) {\n  const eleLink = document.createElement(\"a\");\n\n  let url: string;\n  if (content instanceof Blob) url = URL.createObjectURL(content);\n  else url = URL.createObjectURL(new Blob([content]));\n  eleLink.download = filename;\n  eleLink.style.display = \"none\";\n\n  eleLink.href = url;\n\n  document.body.appendChild(eleLink);\n  eleLink.click();\n  document.body.removeChild(eleLink);\n  URL.revokeObjectURL(url);\n}\n\nexport function dataURItoBlob(dataURI: string) {\n  // convert base64/URLEncoded data component to raw binary data held in a string\n  var byteString;\n  if (dataURI.split(\",\")[0].indexOf(\"base64\") >= 0)\n    byteString = atob(dataURI.split(\",\")[1]);\n  else byteString = unescape(dataURI.split(\",\")[1]);\n\n  // separate out the mime component\n  var mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n\n  // write the bytes of the string to a typed array\n  var ia = new Uint8Array(byteString.length);\n  for (var i = 0; i < byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n  }\n\n  return new Blob([ia], { type: mimeString });\n}\n","import { useState, useEffect } from \"react\";\nimport useDebounce from \"./useDebounce\";\n\nconst defaultConfig = {\n  width: 500,\n  height: 350,\n  leftWidth: 150,\n  rightWidth: 150,\n};\nexport default ({\n  content,\n  splitIndex,\n}: Omit<IRendererProps, \"setexportMethod\">) => {\n  const [state, setstate] = useState(defaultConfig);\n\n  // const debounced = useDebounce({ content, splitIndex }, 100);\n\n  useDebounce(content, 100);\n  useEffect(() => {\n    const newConfig = Object.assign({}, defaultConfig);\n\n    newConfig.width =\n      Math.max(\n        content.substring(0, splitIndex).gblen,\n        content.substring(splitIndex).gblen\n      ) *\n        45 *\n        2 +\n      40;\n    newConfig.height = Math.floor(newConfig.width * 0.6);\n\n    newConfig.leftWidth = content.substring(0, splitIndex).gblen * 45;\n    newConfig.rightWidth = content.substring(splitIndex).gblen * 45;\n\n    setstate(newConfig);\n    return () => {};\n  }, [content, splitIndex]);\n\n  return state;\n};\n","import { useState, useEffect } from \"react\";\n\nexport default function useDebounce<T>(value: T, delay: number): T {\n  // State and setters for debounced value\n\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n","import React, { useRef, useCallback, useState, useEffect } from \"react\";\nimport useConfig from \"src/hooks/useConfig\";\nimport download from \"src/utils/download\";\nimport { IconButton, makeStyles, createStyles } from \"@material-ui/core\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nconst useStyles = makeStyles(\n  createStyles({\n    root: {\n      position: \"relative\",\n    },\n\n    exportPanel: {\n      visibility: \"hidden\",\n      transition: \"1s\",\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      opacity: 0,\n      transform: \"translate(-50%, -50%)\",\n    },\n\n    renderer: {\n      \"&:hover, & $exportPanel\": {\n        opacity: 1,\n        visibility: \"visible\",\n      },\n    },\n  })\n);\n\nexport default function SvgRenderer({\n  content,\n  splitIndex,\n  setexportMethod,\n}: IRendererProps) {\n  const { width, height, leftWidth, rightWidth } = useConfig({\n    content,\n    splitIndex,\n  });\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const classes = useStyles();\n  const exportFunction = useCallback(() => {\n    if (svgRef.current) {\n      download(svgRef.current.outerHTML, \"logo.svg\");\n    }\n  }, []);\n\n  useEffect(() => {\n    setexportMethod(() => exportFunction);\n    return () => {\n      setexportMethod(() => () => {});\n    };\n  }, [exportFunction, setexportMethod]);\n\n  return (\n    <div className={classes.root}>\n      {/* {showButton && (\n      <IconButton\n        onClick={exportFunction}\n        color=\"primary\"\n        component=\"span\"\n        className={classes.exportPanel}\n      >\n        <GetAppIcon></GetAppIcon>\n      </IconButton>\n      )} */}\n\n      <svg\n        width={width}\n        height={height}\n        ref={svgRef}\n        className={classes.renderer}\n      >\n        <rect\n          width={width}\n          height={height}\n          style={{\n            fill: \"rgb(0,0,0)\",\n          }}\n        />\n\n        <rect\n          x={width / 2}\n          y={height * 0.2}\n          rx=\"10\"\n          ry=\"10\"\n          width={rightWidth}\n          height={height * 0.6}\n          style={{\n            fill: \"rgb(253,112,11)\",\n          }}\n        ></rect>\n        <text\n          fill=\"rgb(255,255,255)\"\n          fontSize=\"80\"\n          fontFamily=\"Arial\"\n          alignmentBaseline=\"middle\"\n          x={width / 2}\n          y={height / 2}\n          textAnchor=\"end\"\n        >\n          {content.substring(0, splitIndex)}\n        </text>\n        <text\n          fill=\"rgb(0,0,0)\"\n          fontSize=\"80\"\n          fontFamily=\"Arial\"\n          alignmentBaseline=\"middle\"\n          x={width / 2}\n          y={height / 2}\n        >\n          {content.substring(splitIndex)}\n        </text>\n      </svg>\n    </div>\n  );\n}\n"],"sourceRoot":""}